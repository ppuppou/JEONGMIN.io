{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2a3713bb",
   "metadata": {},
   "source": [
    "---\n",
    "title: \"assignment\"\n",
    "author: \"JEONGMIN OH\"\n",
    "date: now\n",
    "categories: [news]\n",
    "---\n",
    "\n",
    "## 과제 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9815e419",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ls\\AppData\\Local\\Temp\\ipykernel_12464\\4114978373.py:13: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df1['hour'] = df1['datetime'].dt.hour\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "'count가 가장 높은 시간대는 17.0시이며 346.3333333333333회 입니다'"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "df = pd.read_csv(\"./bike_data.csv\")\n",
    "\n",
    "df = df.astype({'datetime' : 'datetime64[ns]', 'weather' : 'int64', \n",
    "                'season' : 'object', 'workingday' : 'object', \n",
    "                'holiday' : 'object'})\n",
    "\n",
    "# 계절이 1일 때 대여량이 가장 많은 시간대 구하기\n",
    "df['season'] == 1\n",
    "df1 = df.loc[df['season'] == 1,:]\n",
    "df1['hour'] = df1['datetime'].dt.hour\n",
    "df2 = df1.groupby('hour')['count'].mean().reset_index()\n",
    "q1 = df2.loc[df2['count'].idxmax(),['hour','count']]\n",
    "f\"count가 가장 높은 시간대는 {q1['hour']}시이며 {q1['count']}회 입니다\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "34c0678a",
   "metadata": {},
   "source": [
    "### 계절별 평균 대여량 구하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "22c7ca04",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>season</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>103.169811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>218.803922</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>265.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>218.581197</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   season       count\n",
       "0       1  103.169811\n",
       "1       2  218.803922\n",
       "2       3  265.500000\n",
       "3       4  218.581197"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('season')['count'].mean().reset_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0ab6a3b4",
   "metadata": {},
   "source": [
    "### 특정 달 동안 총 대여량 구하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ff1d56c0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>month</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2567</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>4849</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>3520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>5911</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>10082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>6325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>8517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>10480</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>10208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>10574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>6631</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>8369</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    month  count\n",
       "0       1   2567\n",
       "1       2   4849\n",
       "2       3   3520\n",
       "3       4   5911\n",
       "4       5  10082\n",
       "5       6   6325\n",
       "6       7   8517\n",
       "7       8  10480\n",
       "8       9  10208\n",
       "9      10  10574\n",
       "10     11   6631\n",
       "11     12   8369"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['month'] = df['datetime'].dt.month\n",
    "df.groupby('month')['count'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fea16973",
   "metadata": {},
   "source": [
    "### 가장 대여량이 많은 날짜"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "84791b3e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1398"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['date'] = df['datetime'].dt.date\n",
    "df.groupby('date')['count'].sum().idxmax()\n",
    "df.groupby('date')['count'].sum().max()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e85596d",
   "metadata": {},
   "source": [
    "### 시간대별 평균 대여량"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ca6be148",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hour</th>\n",
       "      <th>count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>43.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>52.714286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>32.842105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>12.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>6.687500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>17.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>58.705882</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>208.937500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>483.055556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>260.117647</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>10</td>\n",
       "      <td>144.130435</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>182.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>277.533333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>13</td>\n",
       "      <td>290.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>14</td>\n",
       "      <td>266.842105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>15</td>\n",
       "      <td>255.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>16</td>\n",
       "      <td>373.052632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>17</td>\n",
       "      <td>519.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>18</td>\n",
       "      <td>447.769231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>322.103448</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>20</td>\n",
       "      <td>210.083333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>21</td>\n",
       "      <td>196.619048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>22</td>\n",
       "      <td>113.560000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>23</td>\n",
       "      <td>77.352941</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    hour       count\n",
       "0      0   43.500000\n",
       "1      1   52.714286\n",
       "2      2   32.842105\n",
       "3      3   12.000000\n",
       "4      4    6.687500\n",
       "5      5   17.750000\n",
       "6      6   58.705882\n",
       "7      7  208.937500\n",
       "8      8  483.055556\n",
       "9      9  260.117647\n",
       "10    10  144.130435\n",
       "11    11  182.000000\n",
       "12    12  277.533333\n",
       "13    13  290.600000\n",
       "14    14  266.842105\n",
       "15    15  255.666667\n",
       "16    16  373.052632\n",
       "17    17  519.200000\n",
       "18    18  447.769231\n",
       "19    19  322.103448\n",
       "20    20  210.083333\n",
       "21    21  196.619048\n",
       "22    22  113.560000\n",
       "23    23   77.352941"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['hour'] = df['datetime'].dt.hour\n",
    "df.groupby('hour')['count'].mean().reset_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d1cd3395",
   "metadata": {},
   "source": [
    "### 특정 요일(weekday) 동안의 총 대여량(count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "cbbb9a24",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'월요일동안 총 대여량은 10191입니다'"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['요일'] = df['datetime'].dt.day_name()\n",
    "result = df.groupby('요일')['count'].sum().reset_index()\n",
    "f'월요일동안 총 대여량은 {result.iloc[1,1]}입니다'\n",
    "\n",
    "# result['요일'] = result['요일'].astype('category')\n",
    "# result['요일'].array.categories = np.array(['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'])\n",
    "# result['요일'] = result['요일'].cat.set_categories(\n",
    "#     ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n",
    "#     ordered=True  # 순서가 중요할 경우\n",
    "# )\n",
    "# result['요일'].sort_values()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a15fc496",
   "metadata": {},
   "source": [
    "### 주어진 Bike Sharing 데이터를 사용하여 넓은 형식(wide format)에서 긴 형식(long format)으로 변환하시오. casual과 registered 열을 하나의 열로 변환하고, 각 기록의 대여 유형과 대여 수를 포함하는 긴 형식 데이터프레임을 만드시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "61a7c07d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>datetime</th>\n",
       "      <th>season</th>\n",
       "      <th>user_type</th>\n",
       "      <th>user_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>781</th>\n",
       "      <td>2011-01-01 05:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>registered</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>346</th>\n",
       "      <td>2011-01-01 05:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>casual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>231</th>\n",
       "      <td>2011-01-01 20:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>casual</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>666</th>\n",
       "      <td>2011-01-01 20:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>registered</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>838</th>\n",
       "      <td>2011-01-04 00:00:00</td>\n",
       "      <td>1</td>\n",
       "      <td>registered</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>661</th>\n",
       "      <td>2012-12-18 13:00:00</td>\n",
       "      <td>4</td>\n",
       "      <td>registered</td>\n",
       "      <td>235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>464</th>\n",
       "      <td>2012-12-19 12:00:00</td>\n",
       "      <td>4</td>\n",
       "      <td>registered</td>\n",
       "      <td>203</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>2012-12-19 12:00:00</td>\n",
       "      <td>4</td>\n",
       "      <td>casual</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>831</th>\n",
       "      <td>2012-12-19 21:00:00</td>\n",
       "      <td>4</td>\n",
       "      <td>registered</td>\n",
       "      <td>164</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>396</th>\n",
       "      <td>2012-12-19 21:00:00</td>\n",
       "      <td>4</td>\n",
       "      <td>casual</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>870 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               datetime season   user_type  user_count\n",
       "781 2011-01-01 05:00:00      1  registered           1\n",
       "346 2011-01-01 05:00:00      1      casual           0\n",
       "231 2011-01-01 20:00:00      1      casual          11\n",
       "666 2011-01-01 20:00:00      1  registered          25\n",
       "838 2011-01-04 00:00:00      1  registered           5\n",
       "..                  ...    ...         ...         ...\n",
       "661 2012-12-18 13:00:00      4  registered         235\n",
       "464 2012-12-19 12:00:00      4  registered         203\n",
       "29  2012-12-19 12:00:00      4      casual          33\n",
       "831 2012-12-19 21:00:00      4  registered         164\n",
       "396 2012-12-19 21:00:00      4      casual           4\n",
       "\n",
       "[870 rows x 4 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "melted = df.melt(id_vars=('datetime','season'),\n",
    "                var_name='user_type',\n",
    "                value_vars=('casual','registered'),\n",
    "                value_name=('user_count')\n",
    "                ).sort_values('datetime')\n",
    "melted"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e52039a3",
   "metadata": {},
   "source": [
    "### 이전에 생성한 긴 형식 데이터프레임을 활용하여 각 계절(season)별로 casual과 registered 사용자의 평균 대여 수(count)를 구하시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "922da515",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>season</th>\n",
       "      <th>user_type</th>\n",
       "      <th>user_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>casual</td>\n",
       "      <td>14.122642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>registered</td>\n",
       "      <td>89.047170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>casual</td>\n",
       "      <td>48.990196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>registered</td>\n",
       "      <td>169.813725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>casual</td>\n",
       "      <td>55.127273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3</td>\n",
       "      <td>registered</td>\n",
       "      <td>210.372727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>4</td>\n",
       "      <td>casual</td>\n",
       "      <td>29.709402</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>4</td>\n",
       "      <td>registered</td>\n",
       "      <td>188.871795</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   season   user_type  user_count\n",
       "0       1      casual   14.122642\n",
       "1       1  registered   89.047170\n",
       "2       2      casual   48.990196\n",
       "3       2  registered  169.813725\n",
       "4       3      casual   55.127273\n",
       "5       3  registered  210.372727\n",
       "6       4      casual   29.709402\n",
       "7       4  registered  188.871795"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "melted.groupby(['season',\n",
    "                'user_type'])['user_count'].mean().reset_index()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a1b1ea5",
   "metadata": {},
   "source": [
    "## 과제 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "c4d1c01f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                  로그\n",
      "0  2024-07-18 12:34:56 User: 홍길동 Action: Login ID...\n",
      "1  2024-07-18 12:35:00 User: 김철수 Action: Purchase...\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>2024</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       0\n",
       "0   2024\n",
       "1   2024\n",
       "2   2024\n",
       "3   2024\n",
       "4   2024\n",
       "5   2024\n",
       "6   2024\n",
       "7   2024\n",
       "8   2024\n",
       "9   2024\n",
       "10  2024\n",
       "11  2024\n",
       "12  2024\n",
       "13  2024\n",
       "14  2024\n",
       "15  2024\n",
       "16  2024\n",
       "17  2024\n",
       "18  2024\n",
       "19  2024\n",
       "20  2024\n",
       "21  2024\n",
       "22  2024\n",
       "23  2024\n",
       "24  2024\n",
       "25  2024\n",
       "26  2024\n",
       "27  2024\n",
       "28  2024\n",
       "29  2024"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "# 앱 로그 데이터\n",
    "pd.set_option('display.max_columns', None) # 전체 칼럼 정보 프린트 옵션\n",
    "df = pd.read_csv('./logdata.csv')\n",
    "print(df.head(2))\n",
    "\n",
    "# 로그 칼럼에서 연도 정보만 추출\n",
    "df['로그'].str.extract(r'(\\d+)')\n",
    "df['로그'].str.extract(r'(20[0-9]+)')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "452dbd20",
   "metadata": {},
   "source": [
    "### 모든 숫자정보 추출"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "01df87b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "level_0\n",
       "0     2024 07 18 12 34 56 12345\n",
       "1      2024 07 18 12 35 00 2000\n",
       "2        2024 07 18 12 36 10 30\n",
       "3     2024 07 18 12 37 22 67890\n",
       "4      2024 07 18 12 38 44 1500\n",
       "5        2024 07 18 12 39 50 25\n",
       "6      2024 07 18 12 40 56 3500\n",
       "7     2024 07 18 12 41 00 23456\n",
       "8      2024 07 18 12 42 10 3000\n",
       "9        2024 07 18 12 43 22 45\n",
       "10    2024 07 18 12 44 44 78901\n",
       "11     2024 07 18 12 45 50 4000\n",
       "12       2024 07 18 12 46 56 35\n",
       "13     2024 07 18 12 47 00 2500\n",
       "14    2024 07 18 12 48 10 56789\n",
       "15     2024 07 18 12 49 22 4500\n",
       "16       2024 07 18 12 50 44 50\n",
       "17    2024 07 18 12 51 50 34567\n",
       "18     2024 07 18 12 52 56 5000\n",
       "19       2024 07 18 12 53 00 20\n",
       "20     2024 07 18 12 54 10 5500\n",
       "21    2024 07 18 12 55 22 12346\n",
       "22     2024 07 18 12 56 44 6000\n",
       "23       2024 07 18 12 57 50 55\n",
       "24    2024 07 18 12 58 56 67891\n",
       "25     2024 07 18 12 59 00 6500\n",
       "26       2024 07 18 13 00 10 40\n",
       "27     2024 07 18 13 01 22 7000\n",
       "28    2024 07 18 13 02 44 78902\n",
       "29     2024 07 18 13 03 50 7500\n",
       "Name: 0, dtype: object"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mat1 = df['로그'].str.extractall(r'([0-9]+)').reset_index()\n",
    "del mat1['match']\n",
    "mat1.groupby('level_0')[0].apply(lambda x: ' '.join(map(str, x)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5584c27d",
   "metadata": {},
   "source": [
    "### 로그 칼럼에서 모든 시간 정보를 추출"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "49ad6f9d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12:34:56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12:35:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12:36:10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12:37:22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12:38:44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>12:39:50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>12:40:56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>12:41:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>12:42:10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>12:43:22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>12:44:44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12:45:50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12:46:56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>12:47:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>12:48:10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>12:49:22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>12:50:44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>12:51:50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>12:52:56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>12:53:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>12:54:10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>12:55:22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>12:56:44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>12:57:50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>12:58:56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>12:59:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>13:00:10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>13:01:22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>13:02:44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>13:03:50</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           0\n",
       "0   12:34:56\n",
       "1   12:35:00\n",
       "2   12:36:10\n",
       "3   12:37:22\n",
       "4   12:38:44\n",
       "5   12:39:50\n",
       "6   12:40:56\n",
       "7   12:41:00\n",
       "8   12:42:10\n",
       "9   12:43:22\n",
       "10  12:44:44\n",
       "11  12:45:50\n",
       "12  12:46:56\n",
       "13  12:47:00\n",
       "14  12:48:10\n",
       "15  12:49:22\n",
       "16  12:50:44\n",
       "17  12:51:50\n",
       "18  12:52:56\n",
       "19  12:53:00\n",
       "20  12:54:10\n",
       "21  12:55:22\n",
       "22  12:56:44\n",
       "23  12:57:50\n",
       "24  12:58:56\n",
       "25  12:59:00\n",
       "26  13:00:10\n",
       "27  13:01:22\n",
       "28  13:02:44\n",
       "29  13:03:50"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['로그'].str.extract(r'([0-9]{2}:[0-9]{2}:[0-9]{2})')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e6530ae",
   "metadata": {},
   "source": [
    "### 로그 칼럼에서 한글 정보만 추출"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c62bd53d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>match</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <th>0</th>\n",
       "      <td>홍길동</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <th>0</th>\n",
       "      <td>김철수</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <th>0</th>\n",
       "      <td>이영희</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <th>0</th>\n",
       "      <td>박지성</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <th>0</th>\n",
       "      <td>최강타</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <th>0</th>\n",
       "      <td>장보고</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <th>0</th>\n",
       "      <td>홍길동</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <th>0</th>\n",
       "      <td>김철수</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <th>0</th>\n",
       "      <td>이영희</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <th>0</th>\n",
       "      <td>박지성</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <th>0</th>\n",
       "      <td>최강타</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <th>0</th>\n",
       "      <td>장보고</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <th>0</th>\n",
       "      <td>홍길동</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <th>0</th>\n",
       "      <td>김철수</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <th>0</th>\n",
       "      <td>이영희</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <th>0</th>\n",
       "      <td>박지성</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <th>0</th>\n",
       "      <td>최강타</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <th>0</th>\n",
       "      <td>장보고</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <th>0</th>\n",
       "      <td>홍길동</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <th>0</th>\n",
       "      <td>김철수</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <th>0</th>\n",
       "      <td>이영희</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <th>0</th>\n",
       "      <td>박지성</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <th>0</th>\n",
       "      <td>최강타</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <th>0</th>\n",
       "      <td>장보고</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <th>0</th>\n",
       "      <td>홍길동</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <th>0</th>\n",
       "      <td>김철수</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <th>0</th>\n",
       "      <td>이영희</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <th>0</th>\n",
       "      <td>박지성</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <th>0</th>\n",
       "      <td>최강타</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <th>0</th>\n",
       "      <td>장보고</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            0\n",
       "   match     \n",
       "0  0      홍길동\n",
       "1  0      김철수\n",
       "2  0      이영희\n",
       "3  0      박지성\n",
       "4  0      최강타\n",
       "5  0      장보고\n",
       "6  0      홍길동\n",
       "7  0      김철수\n",
       "8  0      이영희\n",
       "9  0      박지성\n",
       "10 0      최강타\n",
       "11 0      장보고\n",
       "12 0      홍길동\n",
       "13 0      김철수\n",
       "14 0      이영희\n",
       "15 0      박지성\n",
       "16 0      최강타\n",
       "17 0      장보고\n",
       "18 0      홍길동\n",
       "19 0      김철수\n",
       "20 0      이영희\n",
       "21 0      박지성\n",
       "22 0      최강타\n",
       "23 0      장보고\n",
       "24 0      홍길동\n",
       "25 0      김철수\n",
       "26 0      이영희\n",
       "27 0      박지성\n",
       "28 0      최강타\n",
       "29 0      장보고"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['로그'].str.extractall(r'([가-힣]+)')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04b25933",
   "metadata": {},
   "source": [
    "### 로그 칼럼에서 특수 문자를 제거"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "6aae2535",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0         20240718 123456 User 홍길동 Action Login ID12345\n",
       "1     20240718 123500 User 김철수 Action Purchase Amoun...\n",
       "2       20240718 123610 User 이영희 Action Logout Time 30s\n",
       "3         20240718 123722 User 박지성 Action Login ID67890\n",
       "4     20240718 123844 User 최강타 Action Purchase Amoun...\n",
       "5       20240718 123950 User 장보고 Action Logout Time 25s\n",
       "6     20240718 124056 User 홍길동 Action Purchase Amoun...\n",
       "7         20240718 124100 User 김철수 Action Login ID23456\n",
       "8     20240718 124210 User 이영희 Action Purchase Amoun...\n",
       "9       20240718 124322 User 박지성 Action Logout Time 45s\n",
       "10        20240718 124444 User 최강타 Action Login ID78901\n",
       "11    20240718 124550 User 장보고 Action Purchase Amoun...\n",
       "12      20240718 124656 User 홍길동 Action Logout Time 35s\n",
       "13    20240718 124700 User 김철수 Action Purchase Amoun...\n",
       "14        20240718 124810 User 이영희 Action Login ID56789\n",
       "15    20240718 124922 User 박지성 Action Purchase Amoun...\n",
       "16      20240718 125044 User 최강타 Action Logout Time 50s\n",
       "17        20240718 125150 User 장보고 Action Login ID34567\n",
       "18    20240718 125256 User 홍길동 Action Purchase Amoun...\n",
       "19      20240718 125300 User 김철수 Action Logout Time 20s\n",
       "20    20240718 125410 User 이영희 Action Purchase Amoun...\n",
       "21        20240718 125522 User 박지성 Action Login ID12346\n",
       "22    20240718 125644 User 최강타 Action Purchase Amoun...\n",
       "23      20240718 125750 User 장보고 Action Logout Time 55s\n",
       "24        20240718 125856 User 홍길동 Action Login ID67891\n",
       "25    20240718 125900 User 김철수 Action Purchase Amoun...\n",
       "26      20240718 130010 User 이영희 Action Logout Time 40s\n",
       "27    20240718 130122 User 박지성 Action Purchase Amoun...\n",
       "28        20240718 130244 User 최강타 Action Login ID78902\n",
       "29    20240718 130350 User 장보고 Action Purchase Amoun...\n",
       "Name: 로그, dtype: object"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['로그'].str.replace(r'([^a-zA-Z0-9가-힣\\s])','',regex=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d91f7e9f",
   "metadata": {},
   "source": [
    "### 로그 칼럼에서 유저, Amount 값을 추출한 후 각 유저별 Amount의 평균값을 계산하시오."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "3fe4ddf4",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ls\\AppData\\Local\\Temp\\ipykernel_12464\\774835434.py:5: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df2['amount'] = df2['amount'].astype('int64')\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "user\n",
       "김철수    3666.666667\n",
       "박지성    5750.000000\n",
       "이영희    4250.000000\n",
       "장보고    5750.000000\n",
       "최강타    3750.000000\n",
       "홍길동    4250.000000\n",
       "Name: amount, dtype: float64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1 = pd.DataFrame()\n",
    "df1['amount'] = df['로그'].str.extract(r'Amount: ([0-9]+)')\n",
    "df1['user'] = df['로그'].str.extract(r'User: ([가-힣]+)')\n",
    "df2 = df1.dropna()\n",
    "df2['amount'] = df2['amount'].astype('int64')\n",
    "df2.groupby('user')['amount'].mean()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3",
   "path": "C:\\Users\\ls\\AppData\\Roaming\\Python\\share\\jupyter\\kernels\\python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
