{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"assignment\"\n",
        "author: \"JEONGMIN OH\"\n",
        "date: now\n",
        "categories: [news]\n",
        "---\n",
        "\n",
        "## 과제 1"
      ],
      "id": "20782f09"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "df = pd.read_csv(\"./bike_data.csv\")\n",
        "\n",
        "df = df.astype({'datetime' : 'datetime64[ns]', 'weather' : 'int64', \n",
        "                'season' : 'object', 'workingday' : 'object', \n",
        "                'holiday' : 'object'})\n",
        "\n",
        "# 계절이 1일 때 대여량이 가장 많은 시간대 구하기\n",
        "df['season'] == 1\n",
        "df1 = df.loc[df['season'] == 1,:]\n",
        "df1['hour'] = df1['datetime'].dt.hour\n",
        "df2 = df1.groupby('hour')['count'].mean().reset_index()\n",
        "q1 = df2.loc[df2['count'].idxmax(),['hour','count']]\n",
        "f\"count가 가장 높은 시간대는 {q1['hour']}시이며 {q1['count']}회 입니다\"\n",
        "\n",
        "# 계절별 평균 대여량 구하기\n",
        "df.groupby('season')['count'].mean().reset_index()\n",
        "\n",
        "# 특정 달 동안 총 대여량 구하기\n",
        "df['month'] = df['datetime'].dt.month\n",
        "df.groupby('month')['count'].sum().reset_index()\n",
        "\n",
        "# 가장 대여량이 많은 날짜\n",
        "df['date'] = df['datetime'].dt.date\n",
        "df.groupby('date')['count'].sum().idxmax()\n",
        "df.groupby('date')['count'].sum().max()\n",
        "\n",
        "# 시간대별 평균 대여량\n",
        "df['hour'] = df['datetime'].dt.hour\n",
        "df.groupby('hour')['count'].mean().reset_index()\n",
        "\n",
        "# 특정 요일(weekday) 동안의 총 대여량(count)\n",
        "df['요일'] = df['datetime'].dt.day_name()\n",
        "result = df.groupby('요일')['count'].sum().reset_index()\n",
        "f'월요일동안 총 대여량은 {result.iloc[1,1]}입니다'\n",
        "\n",
        "result['요일'] = result['요일'].astype('category')\n",
        "# result['요일'].array.categories = np.array(['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'])\n",
        "result['요일'] = result['요일'].cat.set_categories(\n",
        "    ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n",
        "    ordered=True  # 순서가 중요할 경우\n",
        ")\n",
        "result['요일'].sort_values()\n",
        "\n",
        "# 주어진 Bike Sharing 데이터를 사용하여 넓은 형식(wide format)에서 \n",
        "# 긴 형식(long format)으로 변환하시오. casual과 registered 열을 하나의\n",
        "# 열로 변환하고, 각 기록의 대여 유형과 대여 수를 포함하는 긴 형식 \n",
        "# 데이터프레임을 만드시오.\n",
        "melted = df.melt(id_vars=('datetime','season'),\n",
        "                var_name='user_type',\n",
        "                value_vars=('casual','registered'),\n",
        "                value_name=('user_count')\n",
        "                ).sort_values('datetime')\n",
        "# 이전에 생성한 긴 형식 데이터프레임을 활용하여 각 계절(season)별로 \n",
        "# casual과 registered 사용자의 평균 대여 수(count)를 구하시오.\n",
        "melted.groupby(['season','user_type'])['user_count'].mean().reset_index()"
      ],
      "id": "2f4fd115",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## 과제 2"
      ],
      "id": "7f26e1cd"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "# 앱 로그 데이터\n",
        "pd.set_option('display.max_columns', None) # 전체 칼럼 정보 프린트 옵션\n",
        "df = pd.read_csv('./logdata.csv')\n",
        "print(df.head(2))\n",
        "\n",
        "# 로그 칼럼에서 연도 정보만 추출\n",
        "df['로그'].str.extract(r'(\\d+)')\n",
        "df['로그'].str.extract(r'(20[0-9]+)')\n",
        "\n",
        "# 모든 숫자정보 추출\n",
        "mat1 = df['로그'].str.extractall(r'([0-9]+)').reset_index()\n",
        "del mat1['match']\n",
        "mat1.groupby('level_0')[0].apply(lambda x: ' '.join(map(str, x)))\n",
        "\n",
        "# 로그 칼럼에서 모든 시간 정보를 추출\n",
        "df['로그'].str.extract(r'([0-9]{2}:[0-9]{2}:[0-9]{2})')\n",
        "\n",
        "# 로그 칼럼에서 한글 정보만 추출\n",
        "df['로그'].str.extractall(r'([가-힣]+)')\n",
        "\n",
        "# 로그 칼럼에서 특수 문자를 제거\n",
        "df['로그'].str.replace(r'([^a-zA-Z0-9가-힣\\s])','',regex=True)\n",
        "\n",
        "# 로그 칼럼에서 유저, Amount 값을 추출한 후 각 유저별 Amount의 평균값을 계산하시오.\n",
        "df1 = pd.DataFrame()\n",
        "df1['amount'] = df['로그'].str.extract(r'Amount: ([0-9]+)')\n",
        "df1['user'] = df['로그'].str.extract(r'User: ([가-힣]+)')\n",
        "df2 = df1.dropna()\n",
        "df2['amount'] = df2['amount'].astype('int64')\n",
        "df2.groupby('user')['amount'].mean()"
      ],
      "id": "c501f67d",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\ls\\AppData\\Roaming\\Python\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}